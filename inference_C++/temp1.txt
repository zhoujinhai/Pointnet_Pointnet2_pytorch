graph(%points : Float(1, 3, 10),
      %cate : Float(1, 1, 1),
      %npoint : Long()):
  %3 : Float(1, 10, 3) = onnx::Transpose[perm=[0, 2, 1]](%points) # E:/code/Server223/pointNet/inference_C++/testFunction.py:77:0
  %4 : Tensor = onnx::Shape(%3)
  %5 : Tensor = onnx::Constant[value={0}]()
  %6 : Long() = onnx::Gather[axis=0](%4, %5) # E:/code/Server223/pointNet/inference_C++/testFunction.py:90:0
  %7 : Tensor = onnx::Shape(%3)
  %8 : Tensor = onnx::Constant[value={1}]()
  %9 : Long() = onnx::Gather[axis=0](%7, %8) # E:/code/Server223/pointNet/inference_C++/testFunction.py:90:0
  %10 : Tensor = onnx::Unsqueeze[axes=[0]](%6)
  %11 : Tensor = onnx::Unsqueeze[axes=[0]](%npoint)
  %12 : Tensor = onnx::Concat[axis=0](%10, %11)
  %13 : Long(1, 2) = onnx::ConstantOfShape[value={0}](%12) # E:/code/Server223/pointNet/inference_C++/testFunction.py:91:0
  %14 : Tensor = onnx::Unsqueeze[axes=[0]](%6)
  %15 : Tensor = onnx::Unsqueeze[axes=[0]](%9)
  %16 : Tensor = onnx::Concat[axis=0](%14, %15)
  %17 : Float(1, 10) = onnx::ConstantOfShape[value={1e+10}](%16) # E:/code/Server223/pointNet/inference_C++/testFunction.py:92:0
  %18 : Tensor = onnx::Constant[value={0}]()
  %19 : Float(1, 10) = onnx::Gather[axis=2](%3, %18) # E:/code/Server223/pointNet/inference_C++/testFunction.py:94:0
  %20 : Long(1) = onnx::ArgMax[axis=1, keepdims=0](%19) # E:/code/Server223/pointNet/inference_C++/testFunction.py:94:0
  %21 : Tensor = onnx::Cast[to=7](%6)
  %22 : Tensor = onnx::Constant[value={0}]()
  %23 : Tensor = onnx::Constant[value={1}]()
  %24 : Long(1) = onnx::Range(%22, %21, %23) # E:/code/Server223/pointNet/inference_C++/testFunction.py:95:0
  %25 : Long() = onnx::Constant[value={0}]()
  %26 : Tensor = onnx::Constant[value=[ CPULongType{0} ]]()
  %27 : Long() = onnx::Reshape(%20, %26) # E:/code/Server223/pointNet/inference_C++/testFunction.py:98:0
  %28 : Tensor = onnx::Constant[value={1}]()
  %29 : Tensor = onnx::Shape(%28)
  %30 : Tensor = onnx::ConstantOfShape[value={1}](%29)
  %31 : Long() = onnx::Constant[value={-1}]()
  %32 : LongTensor = onnx::Mul(%30, %31)
  %33 : Long(1) = onnx::Constant[value={1}]()
  %34 : Tensor = onnx::Equal(%33, %32)
  %35 : Tensor = onnx::Where(%34, %30, %28)
  %36 : Long(1) = onnx::Expand(%27, %35) # E:/code/Server223/pointNet/inference_C++/testFunction.py:98:0
  %37 : Tensor = onnx::Shape(%13)
  %38 : Tensor = onnx::Constant[value={0}]()
  %39 : Long() = onnx::Gather[axis=0](%37, %38)
  %40 : Tensor = onnx::Cast[to=7](%39)
  %41 : Tensor = onnx::Constant[value={0}]()
  %42 : Tensor = onnx::Constant[value={1}]()
  %43 : Tensor = onnx::Range(%41, %40, %42)
  %44 : Tensor = onnx::Unsqueeze[axes=[0]](%25)
  %45 : Tensor = onnx::Constant[value=-1  1 [ CPULongType{2} ]]()
  %46 : Tensor = onnx::Reshape(%43, %45)
  %47 : Tensor = onnx::Constant[value={-1}]()
  %48 : Tensor = onnx::Reshape(%44, %47)
  %49 : Tensor = onnx::Add(%46, %48)
  %50 : Tensor = onnx::Shape(%49)
  %51 : Tensor = onnx::Shape(%50)
  %52 : Tensor = onnx::ConstantOfShape[value={1}](%51)
  %53 : Long() = onnx::Constant[value={-1}]()
  %54 : LongTensor = onnx::Mul(%52, %53)
  %55 : Tensor = onnx::Equal(%50, %54)
  %56 : Tensor = onnx::Where(%55, %52, %50)
  %57 : Tensor = onnx::Expand(%46, %56)
  %58 : Tensor = onnx::Unsqueeze[axes=[-1]](%57)
  %59 : Tensor = onnx::Shape(%50)
  %60 : Tensor = onnx::ConstantOfShape[value={1}](%59)
  %61 : Long() = onnx::Constant[value={-1}]()
  %62 : LongTensor = onnx::Mul(%60, %61)
  %63 : Tensor = onnx::Equal(%50, %62)
  %64 : Tensor = onnx::Where(%63, %60, %50)
  %65 : Tensor = onnx::Expand(%48, %64)
  %66 : Tensor = onnx::Unsqueeze[axes=[-1]](%65)
  %67 : Tensor = onnx::Concat[axis=-1](%58, %66)
  %68 : Tensor = onnx::Shape(%13)
  %69 : Tensor = onnx::Constant[value={0}]()
  %70 : Tensor = onnx::Constant[value={2}]()
  %71 : Tensor = onnx::Constant[value={9223372036854775807}]()
  %72 : Tensor = onnx::Slice(%68, %70, %71, %69)
  %73 : Tensor = onnx::Concat[axis=0](%50, %72)
  %74 : Tensor = onnx::Reshape(%36, %73)
  %75 : Long(1) = onnx::ScatterND(%13, %67, %74)
  %76 : Long(1) = onnx::Cast[to=7](%24) # E:/code/Server223/pointNet/inference_C++/testFunction.py:99:0
  %77 : Long(1) = onnx::Cast[to=7](%20) # E:/code/Server223/pointNet/inference_C++/testFunction.py:99:0
  %78 : Tensor = onnx::Shape(%3)
  %79 : Tensor = onnx::Constant[value={1}]()
  %80 : Tensor = onnx::Gather[axis=0](%78, %79)
  %81 : Tensor = onnx::Constant[value={2}]()
  %82 : Tensor = onnx::Gather[axis=0](%78, %81)
  %83 : Tensor = onnx::Transpose[perm=[0, 2, 1]](%points)
  %84 : Tensor = onnx::Flatten[axis=2](%83)
  %85 : LongTensor = onnx::Mul(%76, %80)
  %86 : LongTensor = onnx::Add(%77, %85)
  %87 : Tensor = onnx::Gather[axis=0](%84, %86)
  %88 : Tensor = onnx::Shape(%86)
  %89 : Tensor = onnx::Constant[value={-1}]()
  %90 : Tensor = onnx::Concat[axis=0](%89, %82)
  %91 : Tensor = onnx::Reshape(%87, %90)
  %92 : Tensor = onnx::Concat[axis=0](%88, %82)
  %93 : Float(1, 3) = onnx::Reshape(%91, %92) # E:/code/Server223/pointNet/inference_C++/testFunction.py:99:0
  %94 : Long() = onnx::Constant[value={1}]()
  %95 : Long() = onnx::Constant[value={3}]()
  %96 : Tensor = onnx::Unsqueeze[axes=[0]](%6)
  %97 : Tensor = onnx::Unsqueeze[axes=[0]](%94)
  %98 : Tensor = onnx::Unsqueeze[axes=[0]](%95)
  %99 : Tensor = onnx::Concat[axis=0](%96, %97, %98)
  %100 : Float(1, 1, 3) = onnx::Reshape(%93, %99) # E:/code/Server223/pointNet/inference_C++/testFunction.py:99:0
  %101 : Float(1, 10, 3) = onnx::Sub(%3, %100) # E:/code/Server223/pointNet/inference_C++/testFunction.py:100:0
  %102 : Float() = onnx::Constant[value={2}]()
  %103 : Float(1, 10, 3) = onnx::Pow(%101, %102) # E:/code/Server223/pointNet/inference_C++/testFunction.py:100:0
  %104 : Float(1, 10) = onnx::ReduceSum[axes=[-1], keepdims=0](%103) # E:/code/Server223/pointNet/inference_C++/testFunction.py:100:0
  %105 : Bool(1, 10) = onnx::Less(%104, %17) # D:\python\lib\site-packages\torch\tensor.py:28:0
  %106 : Float(1, 10) = onnx::Where(%105, %104, %17) # E:/code/Server223/pointNet/inference_C++/testFunction.py:103:0
  %107 : Long(1) = onnx::ArgMax[axis=-1, keepdims=0](%106) # E:/code/Server223/pointNet/inference_C++/testFunction.py:104:0
  %108 : Long() = onnx::Constant[value={1}]()
  %109 : Tensor = onnx::Constant[value=[ CPULongType{0} ]]()
  %110 : Long() = onnx::Reshape(%107, %109) # E:/code/Server223/pointNet/inference_C++/testFunction.py:98:0
  %111 : Tensor = onnx::Constant[value={1}]()
  %112 : Tensor = onnx::Shape(%111)
  %113 : Tensor = onnx::ConstantOfShape[value={1}](%112)
  %114 : Long() = onnx::Constant[value={-1}]()
  %115 : LongTensor = onnx::Mul(%113, %114)
  %116 : Long(1) = onnx::Constant[value={1}]()
  %117 : Tensor = onnx::Equal(%116, %115)
  %118 : Tensor = onnx::Where(%117, %113, %111)
  %119 : Long(1) = onnx::Expand(%110, %118) # E:/code/Server223/pointNet/inference_C++/testFunction.py:98:0
  %120 : Tensor = onnx::Shape(%75)
  %121 : Tensor = onnx::Constant[value={0}]()
  %122 : Long() = onnx::Gather[axis=0](%120, %121)
  %123 : Tensor = onnx::Cast[to=7](%122)
  %124 : Tensor = onnx::Constant[value={0}]()
  %125 : Tensor = onnx::Constant[value={1}]()
  %126 : Tensor = onnx::Range(%124, %123, %125)
  %127 : Tensor = onnx::Unsqueeze[axes=[0]](%108)
  %128 : Tensor = onnx::Constant[value=-1  1 [ CPULongType{2} ]]()
  %129 : Tensor = onnx::Reshape(%126, %128)
  %130 : Tensor = onnx::Constant[value={-1}]()
  %131 : Tensor = onnx::Reshape(%127, %130)
  %132 : Tensor = onnx::Add(%129, %131)
  %133 : Tensor = onnx::Shape(%132)
  %134 : Tensor = onnx::Shape(%133)
  %135 : Tensor = onnx::ConstantOfShape[value={1}](%134)
  %136 : Long() = onnx::Constant[value={-1}]()
  %137 : LongTensor = onnx::Mul(%135, %136)
  %138 : Tensor = onnx::Equal(%133, %137)
  %139 : Tensor = onnx::Where(%138, %135, %133)
  %140 : Tensor = onnx::Expand(%129, %139)
  %141 : Tensor = onnx::Unsqueeze[axes=[-1]](%140)
  %142 : Tensor = onnx::Shape(%133)
  %143 : Tensor = onnx::ConstantOfShape[value={1}](%142)
  %144 : Long() = onnx::Constant[value={-1}]()
  %145 : LongTensor = onnx::Mul(%143, %144)
  %146 : Tensor = onnx::Equal(%133, %145)
  %147 : Tensor = onnx::Where(%146, %143, %133)
  %148 : Tensor = onnx::Expand(%131, %147)
  %149 : Tensor = onnx::Unsqueeze[axes=[-1]](%148)
  %150 : Tensor = onnx::Concat[axis=-1](%141, %149)
  %151 : Tensor = onnx::Shape(%75)
  %152 : Tensor = onnx::Constant[value={0}]()
  %153 : Tensor = onnx::Constant[value={2}]()
  %154 : Tensor = onnx::Constant[value={9223372036854775807}]()
  %155 : Tensor = onnx::Slice(%151, %153, %154, %152)
  %156 : Tensor = onnx::Concat[axis=0](%133, %155)
  %157 : Tensor = onnx::Reshape(%119, %156)
  %158 : Long(1) = onnx::ScatterND(%75, %150, %157)
  %159 : Tensor = onnx::Shape(%3)
  %160 : Tensor = onnx::Constant[value={0}]()
  %161 : Long() = onnx::Gather[axis=0](%159, %160) # E:/code/Server223/pointNet/inference_C++/testFunction.py:68:0
  %162 : Tensor = onnx::Shape(%158)
  %163 : Tensor = onnx::Constant[value={0}]()
  %164 : Long() = onnx::Gather[axis=0](%162, %163) # E:/code/Server223/pointNet/inference_C++/testFunction.py:69:0
  %165 : Tensor = onnx::Shape(%158)
  %166 : Tensor = onnx::Constant[value={1}]()
  %167 : Long() = onnx::Gather[axis=0](%165, %166) # E:/code/Server223/pointNet/inference_C++/testFunction.py:73:0
  %168 : Tensor = onnx::Cast[to=7](%161)
  %169 : Tensor = onnx::Constant[value={0}]()
  %170 : Tensor = onnx::Constant[value={1}]()
  %171 : Long(1) = onnx::Range(%169, %168, %170) # E:/code/Server223/pointNet/inference_C++/testFunction.py:76:0
  %172 : Long() = onnx::Constant[value={1}]()
  %173 : Tensor = onnx::Unsqueeze[axes=[0]](%164)
  %174 : Tensor = onnx::Unsqueeze[axes=[0]](%172)
  %175 : Tensor = onnx::Concat[axis=0](%173, %174)
  %176 : Long(1, 1) = onnx::Reshape(%171, %175) # E:/code/Server223/pointNet/inference_C++/testFunction.py:76:0
  %177 : Long() = onnx::Constant[value={1}]()
  %178 : Tensor = onnx::Unsqueeze[axes=[0]](%177)
  %179 : Tensor = onnx::Unsqueeze[axes=[0]](%167)
  %180 : Tensor = onnx::Concat[axis=0](%178, %179)
  %181 : Long(1, 2) = onnx::Tile(%176, %180) # E:/code/Server223/pointNet/inference_C++/testFunction.py:76:0
  %182 : Long(1, 2) = onnx::Cast[to=7](%181) # E:/code/Server223/pointNet/inference_C++/testFunction.py:77:0
  %183 : Long(1, 2) = onnx::Cast[to=7](%158) # E:/code/Server223/pointNet/inference_C++/testFunction.py:77:0
  %184 : Tensor = onnx::Shape(%3)
  %185 : Tensor = onnx::Constant[value={1}]()
  %186 : Tensor = onnx::Gather[axis=0](%184, %185)
  %187 : Tensor = onnx::Constant[value={2}]()
  %188 : Tensor = onnx::Gather[axis=0](%184, %187)
  %189 : Tensor = onnx::Transpose[perm=[0, 2, 1]](%points)
  %190 : Tensor = onnx::Flatten[axis=2](%189)
  %191 : LongTensor = onnx::Mul(%182, %186)
  %192 : LongTensor = onnx::Add(%183, %191)
  %193 : Tensor = onnx::Gather[axis=0](%190, %192)
  %194 : Tensor = onnx::Shape(%192)
  %195 : Tensor = onnx::Constant[value={-1}]()
  %196 : Tensor = onnx::Concat[axis=0](%195, %188)
  %197 : Tensor = onnx::Reshape(%193, %196)
  %198 : Tensor = onnx::Concat[axis=0](%194, %188)
  %199 : Float(1, 2, 3) = onnx::Reshape(%197, %198) # E:/code/Server223/pointNet/inference_C++/testFunction.py:77:0
  %200 : Tensor = onnx::Shape(%3)
  %201 : Tensor = onnx::Constant[value={0}]()
  %202 : Long() = onnx::Gather[axis=0](%200, %201) # E:/code/Server223/pointNet/inference_C++/testFunction.py:41:0
  %203 : Tensor = onnx::Shape(%3)
  %204 : Tensor = onnx::Constant[value={1}]()
  %205 : Long() = onnx::Gather[axis=0](%203, %204) # E:/code/Server223/pointNet/inference_C++/testFunction.py:41:0
  %206 : Tensor = onnx::Shape(%199)
  %207 : Tensor = onnx::Constant[value={1}]()
  %208 : Long() = onnx::Gather[axis=0](%206, %207) # E:/code/Server223/pointNet/inference_C++/testFunction.py:42:0
  %209 : Tensor = onnx::Cast[to=7](%205)
  %210 : Tensor = onnx::Constant[value={0}]()
  %211 : Tensor = onnx::Constant[value={1}]()
  %212 : Long(10) = onnx::Range(%210, %209, %211) # E:/code/Server223/pointNet/inference_C++/testFunction.py:43:0
  %213 : Long() = onnx::Constant[value={1}]()
  %214 : Long() = onnx::Constant[value={1}]()
  %215 : Tensor = onnx::Unsqueeze[axes=[0]](%213)
  %216 : Tensor = onnx::Unsqueeze[axes=[0]](%214)
  %217 : Tensor = onnx::Unsqueeze[axes=[0]](%205)
  %218 : Tensor = onnx::Concat[axis=0](%215, %216, %217)
  %219 : Long(1, 1, 10) = onnx::Reshape(%212, %218) # E:/code/Server223/pointNet/inference_C++/testFunction.py:43:0
  %220 : Long() = onnx::Constant[value={1}]()
  %221 : Tensor = onnx::Unsqueeze[axes=[0]](%202)
  %222 : Tensor = onnx::Unsqueeze[axes=[0]](%208)
  %223 : Tensor = onnx::Unsqueeze[axes=[0]](%220)
  %224 : Tensor = onnx::Concat[axis=0](%221, %222, %223)
  %225 : Long(1, 2, 10) = onnx::Tile(%219, %224) # E:/code/Server223/pointNet/inference_C++/testFunction.py:43:0
  %226 : Tensor = onnx::Shape(%199)
  %227 : Tensor = onnx::Constant[value={0}]()
  %228 : Long() = onnx::Gather[axis=0](%226, %227) # E:/code/Server223/pointNet/inference_C++/testFunction.py:22:0
  %229 : Tensor = onnx::Shape(%199)
  %230 : Tensor = onnx::Constant[value={1}]()
  %231 : Long() = onnx::Gather[axis=0](%229, %230) # E:/code/Server223/pointNet/inference_C++/testFunction.py:22:0
  %232 : Tensor = onnx::Shape(%3)
  %233 : Tensor = onnx::Constant[value={1}]()
  %234 : Long() = onnx::Gather[axis=0](%232, %233) # E:/code/Server223/pointNet/inference_C++/testFunction.py:23:0
  %235 : Float(1, 2, 10) = onnx::MatMul(%199, %points) # E:/code/Server223/pointNet/inference_C++/testFunction.py:24:0
  %236 : Float() = onnx::Constant[value={-2}]()
  %237 : Float(1, 2, 10) = onnx::Mul(%235, %236)
  %238 : Float() = onnx::Constant[value={2}]()
  %239 : Float(1, 2, 3) = onnx::Pow(%199, %238) # E:/code/Server223/pointNet/inference_C++/testFunction.py:25:0
  %240 : Float(1, 2) = onnx::ReduceSum[axes=[-1], keepdims=0](%239) # E:/code/Server223/pointNet/inference_C++/testFunction.py:25:0
  %241 : Long() = onnx::Constant[value={1}]()
  %242 : Tensor = onnx::Unsqueeze[axes=[0]](%228)
  %243 : Tensor = onnx::Unsqueeze[axes=[0]](%231)
  %244 : Tensor = onnx::Unsqueeze[axes=[0]](%241)
  %245 : Tensor = onnx::Concat[axis=0](%242, %243, %244)
  %246 : Float(1, 2, 1) = onnx::Reshape(%240, %245) # E:/code/Server223/pointNet/inference_C++/testFunction.py:25:0
  %247 : Float(1, 2, 10) = onnx::Add(%237, %246)
  %248 : Float() = onnx::Constant[value={2}]()
  %249 : Float(1, 10, 3) = onnx::Pow(%3, %248) # E:/code/Server223/pointNet/inference_C++/testFunction.py:26:0
  %250 : Float(1, 10) = onnx::ReduceSum[axes=[-1], keepdims=0](%249) # E:/code/Server223/pointNet/inference_C++/testFunction.py:26:0
  %251 : Long() = onnx::Constant[value={1}]()
  %252 : Tensor = onnx::Unsqueeze[axes=[0]](%228)
  %253 : Tensor = onnx::Unsqueeze[axes=[0]](%251)
  %254 : Tensor = onnx::Unsqueeze[axes=[0]](%234)
  %255 : Tensor = onnx::Concat[axis=0](%252, %253, %254)
  %256 : Float(1, 1, 10) = onnx::Reshape(%250, %255) # E:/code/Server223/pointNet/inference_C++/testFunction.py:26:0
  %257 : Float(1, 2, 10) = onnx::Add(%247, %256)
  %258 : Tensor = onnx::Unsqueeze[axes=[0]](%202)
  %259 : Tensor = onnx::Unsqueeze[axes=[0]](%208)
  %260 : Tensor = onnx::Unsqueeze[axes=[0]](%205)
  %261 : Tensor = onnx::Concat[axis=0](%258, %259, %260)
  %262 : Tensor = onnx::ConstantOfShape[value={0}](%261)
  %263 : Long(1, 2, 10) = onnx::Add(%262, %205) # E:/code/Server223/pointNet/inference_C++/testFunction.py:47:0
  %264 : Float() = onnx::Constant[value={0.25}]()
  %265 : Bool(1, 2, 10) = onnx::Greater(%257, %264) # D:\python\lib\site-packages\torch\tensor.py:28:0
  %266 : Long(1, 2, 10) = onnx::Where(%265, %263, %225) # E:/code/Server223/pointNet/inference_C++/testFunction.py:48:0
  %267 : Tensor = onnx::Shape(%266)
  %268 : Tensor = onnx::Constant[value={-1}]()
  %269 : Tensor = onnx::Gather(%267, %268)
  %270 : Long(1, 2, 10), %271 : Long(1, 2, 10) = onnx::TopK[axis=-1, largest=0](%266, %269) # E:/code/Server223/pointNet/inference_C++/testFunction.py:50:0
  %272 : Tensor = onnx::Constant[value={2}]()
  %273 : Tensor = onnx::Constant[value={0}]()
  %274 : Tensor = onnx::Constant[value={1}]()
  %275 : Tensor = onnx::Constant[value={1}]()
  %276 : Long(1, 2, 1) = onnx::Slice(%270, %273, %274, %272, %275) # E:/code/Server223/pointNet/inference_C++/testFunction.py:51:0
  %277 : Tensor = onnx::Constant[value={0}]()
  %278 : Long(1, 2) = onnx::Gather[axis=2](%276, %277) # E:/code/Server223/pointNet/inference_C++/testFunction.py:51:0
  %279 : Long() = onnx::Constant[value={1}]()
  %280 : Tensor = onnx::Unsqueeze[axes=[0]](%202)
  %281 : Tensor = onnx::Unsqueeze[axes=[0]](%208)
  %282 : Tensor = onnx::Unsqueeze[axes=[0]](%279)
  %283 : Tensor = onnx::Concat[axis=0](%280, %281, %282)
  %284 : Long(1, 2, 1) = onnx::Reshape(%278, %283) # E:/code/Server223/pointNet/inference_C++/testFunction.py:51:0
  %285 : int[] = onnx::Constant[value= 1  1  1 [ CPULongType{3} ]]()
  %286 : Long(1, 2, 1) = onnx::Tile(%284, %285) # E:/code/Server223/pointNet/inference_C++/testFunction.py:51:0
  %287 : Bool(1, 2, 1) = onnx::Equal(%276, %205) # D:\python\lib\site-packages\torch\tensor.py:28:0
  %select_ids : Long(1, 2, 1) = onnx::Where(%287, %286, %276) # E:/code/Server223/pointNet/inference_C++/testFunction.py:54:0
  return (%select_ids)